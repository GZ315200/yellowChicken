<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.igeek.dao.QualityQuestionMapper">
    <resultMap id="BaseResultMap" type="org.igeek.pojo.QualityQuestion">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="org_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="collect_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="question_type" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="collect_type" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="question_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="question_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="work_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="coefficient" javaType="java.lang.Double" jdbcType="DOUBLE"/>
            <arg column="quantity" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="created" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="modified" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    id, org_id, collect_id, question_type, collect_type, question_id, question_name, 
    work_name, user_id, coefficient, quantity, status, remark, created, modified
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from mj_quality_question
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mj_quality_question
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="org.igeek.pojo.QualityQuestion">
    insert into mj_quality_question (id, org_id, collect_id, 
      question_type, collect_type, question_id, 
      question_name, work_name, user_id, 
      coefficient, quantity, status, 
      remark, created, modified
      )
    values (#{id,jdbcType=INTEGER}, #{orgId,jdbcType=INTEGER}, #{collectId,jdbcType=VARCHAR},
      #{questionType,jdbcType=VARCHAR}, #{collectType,jdbcType=INTEGER}, #{questionId,jdbcType=INTEGER}, 
      #{questionName,jdbcType=VARCHAR}, #{workName,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{coefficient,jdbcType=DOUBLE}, #{quantity,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, now(), now()
      )
  </insert>
    <insert id="insertSelective" parameterType="org.igeek.pojo.QualityQuestion">
        insert into mj_quality_question
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="orgId != null">
                org_id,
            </if>
            <if test="collectId != null">
                collect_id,
            </if>
            <if test="questionType != null">
                question_type,
            </if>
            <if test="collectType != null">
                collect_type,
            </if>
            <if test="questionId != null">
                question_id,
            </if>
            <if test="questionName != null">
                question_name,
            </if>
            <if test="workName != null">
                work_name,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="coefficient != null">
                coefficient,
            </if>
            <if test="quantity != null">
                quantity,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="created != null">
                created,
            </if>
            <if test="modified != null">
                modified,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="orgId != null">
                #{orgId,jdbcType=INTEGER},
            </if>
            <if test="collectId != null">
                #{collectId,jdbcType=VARCHAR},
            </if>
            <if test="questionType != null">
                #{questionType,jdbcType=VARCHAR},
            </if>
            <if test="collectType != null">
                #{collectType,jdbcType=INTEGER},
            </if>
            <if test="questionId != null">
                #{questionId,jdbcType=INTEGER},
            </if>
            <if test="questionName != null">
                #{questionName,jdbcType=VARCHAR},
            </if>
            <if test="workName != null">
                #{workName,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="coefficient != null">
                #{coefficient,jdbcType=DOUBLE},
            </if>
            <if test="quantity != null">
                #{quantity,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="created != null">
                now(),
            </if>
            <if test="modified != null">
                now(),
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.igeek.pojo.QualityQuestion">
        update mj_quality_question
        <set>
            <if test="orgId != null">
                org_id = #{orgId,jdbcType=INTEGER},
            </if>
            <if test="collectId != null">
                collect_id = #{collectId,jdbcType=VARCHAR},
            </if>
            <if test="questionType != null">
                question_type = #{questionType,jdbcType=VARCHAR},
            </if>
            <if test="collectType != null">
                collect_type = #{collectType,jdbcType=INTEGER},
            </if>
            <if test="questionId != null">
                question_id = #{questionId,jdbcType=INTEGER},
            </if>
            <if test="questionName != null">
                question_name = #{questionName,jdbcType=VARCHAR},
            </if>
            <if test="workName != null">
                work_name = #{workName,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="coefficient != null">
                coefficient = #{coefficient,jdbcType=DOUBLE},
            </if>
            <if test="quantity != null">
                quantity = #{quantity,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="created != null">
                created = #{created,jdbcType=TIMESTAMP},
            </if>
            <if test="modified != null">
                modified = now(),
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.igeek.pojo.QualityQuestion">
    update mj_quality_question
    set org_id = #{orgId,jdbcType=INTEGER},
      collect_id = #{collectId,jdbcType=VARCHAR},
      question_type = #{questionType,jdbcType=VARCHAR},
      collect_type = #{collectType,jdbcType=INTEGER},
      question_id = #{questionId,jdbcType=INTEGER},
      question_name = #{questionName,jdbcType=VARCHAR},
      work_name = #{workName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      coefficient = #{coefficient,jdbcType=DOUBLE},
      quantity = #{quantity,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      modified = now()
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="getQualityQuestionList" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from mj_quality_question where status != 0 and org_id = #{orgId,jdbcType=INTEGER}
        <if test="collectType != null">
            and collect_type = #{collectType}
        </if>
        and collect_id = #{collectId}
    </select>

    <select id="getWorkerCollectInfo" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from mj_quality_question
        where org_id = #{orgId,jdbcType=INTEGER} and user_id = #{workerId}
        and collect_id = #{collectId}
        and question_id = #{questionId}
    </select>

    <select id="updateQualityQuestionStatus" parameterType="map" resultType="int">
       update mj_quality_question
       set status = 0,
       modified = now()
        where org_id = #{orgId,jdbcType=INTEGER} and user_id = #{workerId}
        and collect_id = #{collectId}
    </select>

</mapper>