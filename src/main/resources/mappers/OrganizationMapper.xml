<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.igeek.dao.OrganizationMapper">
  <resultMap id="BaseResultMap" type="org.igeek.pojo.Organization">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="org_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="username" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="org_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="contact" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="email" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="updateTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="createTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, org_id, username, password, org_name, contact, email, status, updateTime, createTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from organization
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from organization
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.igeek.pojo.Organization">
    insert into organization (id, org_id, username, 
      password, org_name, contact, 
      email, status, updateTime, 
      createTime)
    values (#{id,jdbcType=INTEGER}, #{orgId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{orgName,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, now(),
     now())
  </insert>
  <insert id="insertSelective" parameterType="org.igeek.pojo.Organization">
    insert into organization
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orgId != null">
        org_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="orgName != null">
        org_name,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null">
        #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
       now(),
      </if>
      <if test="createtime != null">
       now(),
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.igeek.pojo.Organization">
    update organization
    <set>
      <if test="orgId != null">
        org_id = #{orgId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null">
        org_name = #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        updateTime = now(),
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.igeek.pojo.Organization">
    update organization
    set org_id = #{orgId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      org_name = #{orgName,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      updateTime = now(),
      createTime = #{createtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByOrgIdAndUsername" parameterType="map" resultType="int">
    select count(1)
    from organization where org_id = #{orgId}
    and username = #{username}
  </select>

  <select id="selectLogin" resultMap="BaseResultMap" parameterType="map">
    select <include refid="Base_Column_List"></include>
    from organization where
    org_id = #{orgId}
    and username = #{username}
    and password = #{password}
  </select>

  <select id="selectByOrgId" resultType="int" parameterType="int">
    select count(1)  from organization where org_id = #{orgId}
  </select>
</mapper>